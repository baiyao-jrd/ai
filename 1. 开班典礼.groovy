// 一、GPU
// 1. 硬件设备要求
关键是显存 -> 越大越好 -> 其他cpu、硬盘都次要

1.1 台式机
3060TI 12GB显存 i5/i7 -> 7000左右 -> 这个能保证目前学得所有的程序跑起来 -> 标配

3090TI 24GB显存 i9 -> 3TB硬盘 32GB内存 -> 一万五以上 -> 高配

1.2 笔记本
3070TI 8GB i9 -> 9000+

1.3 需要先安装的软件
anaconda: https://www.anaconda.com/

pycharm: https://www.jetbrains.com/pycharm/

// 二、路线图 -> 学习优先级侧重点
因为内容多, 学习热情肯定是由高到低, 所以建议刚开始热情高的时候, 用于学习重难点, 后面学习热情低的时候, 学相对次要的.

1. python不需要花太多时间练基础, 要把学习热情放在其他地方, 最多给七天时间学习基础, 能看懂代码, 会用, 就可以上手做一些实际的东西了.

2. 关于工具包

    -> 下面的工具包, 搞数据分析, 数据挖掘的要好好搞下, CV或者NLP的可以先不用太在意

    科学计算库-Numpy
    数据分析处理库-Pandas
    可视化库-Matplotlib
    可视化库-Seaborn

3. 数学基础 
    // -> 看你的时间 -> 不着急搞简历或者搞论文, 你想搞6个月, 你想沉淀可以的, 可以过一遍

    // -> 如果想为就业作准备, 论文做准备 -> 数学这个模块先别看, 很耗时间 -> 计划6个月以内学习的, 可以先放一放
    // -> 实际上是, 30%的数学知识点能用上就够可以了, 大部分知识点够呛, 用不上

    // -> 数学千万别买书, 书上求解微积分这东西对你没用, 你是让计算机算的 -> 用工具, 用框架, 用GPU -> 人家帮你求得

    -> 后期可以边练边学

    01.⾼等数学基础
    02.微积分
    03.泰勒公式与拉格朗⽇
    04.线性代数基础
    05.特征值与矩阵分解
    06.随机变量
    07.概率论基础
    08.数据科学你得知道的⼏种分布
    09.核函数变换
    10.熵与激活函数
    11.回归分析
    12.假设检验
    13.相关分析
    14.⽅差分析
    15.聚类分析
    16.⻉叶斯分析

4. 机器学习
你论文搞机器学习搞出来一篇, 难度极大, 你可能是教授级别

现在机器学习的用处只在于 -> 考点 -> 面试会问

前期 -> 直接忽略机器学习, 你面试前一个月搞一遍基础就行了 -> 重要但仅仅是考点

把时间放在深度学习上!!!

5. 数据挖掘
只适合结构化的数据的预测 -> 有这个需求来看这个

你搞 CV、NLP、语音识别、时间序列 -> 暂时先不要看这个

6. 深度学习
看一遍是不行的, 第一遍有个印象已经不错了 -> 你可以刷两遍三遍

如果python熟悉的话 -> 可以直接开始深度学习必备核心算法这个模块

    01.神经⽹络必备基础知识点
    02.神经⽹络前向传播与反向传播
    03.⽹络模型整体架构分析实例
    04.神经⽹络建模效果分析
    05.激活函数与过拟合问题解决
    06.卷积神经⽹络核⼼知识点
    07.卷积建模流程与各参数作⽤分析
    08.池化层的作⽤与效果
    09.经典卷积神经⽹络架构分析
    10.感受野的作⽤与效果解读
    11.递归神经⽹络模型原理分析
    12.RNN系列⽹络结构优缺点分析
    13.词向量模型与LSTM应⽤实例

涉及三个, 要非常熟悉  -> 普通神经网络, 卷积神经网络, 递归神经网络 
                    -> 要明白每个是干什么的, 具体的英文是啥, 里面涉及的东西到底是干啥的, 怎么来的

在这儿一定要慢下来

7. 深度学习框架 pytorch与tensorflow

tensorflow可以不用考虑了, 成为历史了, 长江后浪推前浪 -> pytorch是后浪, 现在是pytorch的时代

所有的论文或者大厂的研究都是用pytorch做的 -> 学校给你讲其他的框架或者tensorflow听个乐子就行, 这东西已经没人用了

    // 这里需要知道pytorch这个东西是啥, 怎么用怎么玩

    这一块代码要亲自动手, 但是不要去背, 现用现查就行 -> 某个函数忘了是啥或者怎么拼 -> 现用现查就行了

    边用边学, 现学现用 -> 两周之内搞定, 直接干 -> 少记笔记

    快速检索能力很重要 -> 查资料的能力很重要 -> 这个需要慢慢练

    有时间就敲 -> 半年为单位 -> 半年以上, 敲一遍 -> 半年以内, 理解为主

这里不要超一个月 -> 拖得越久, 学习兴趣越低

想挤时间, 啥时候都能有

8. opencv图像处理框架
    这个东西会用就行, 有时间就刷一遍, 没时间现用现查都来得及

    纯调包的东西

    以后用到某个东西了, 再深入理解就行

    -> 不希望在工具上花太多时间, 会用即可

9. 物体检测项目 -> 很重要
-> 后面应用物体检测的地方会很多
-> 很多项目研究课题参考的都是物体检测的知识点 -> 行为识别、分割、OCR、JN这么多模块都有参考检测

    YOLO是通用检测框架, 必会 -> v1~5刷一遍视频就行, 你要练一遍, 得有一年时间为代价 -> 只练最新的v7(其实是v5+) -> v7跟v5差不多, 就是在基础上增删改查 

    先理解v7算法 -> 然后得知道v1-v5都干了什么事儿 -> 深入到v7源码中, 一行行过 -> 理解到根儿上 -> 希望大家有这个debug的能力

    源码一点点debug累积之后 -> 后面会越来越快

    两周时间系统去学 -> 一周时间debug, 一行行源码理解 -> 百度也都有

    多花时间刷一刷yolo!!!!!! -> 必会

        10.Efficientnet模块解读
        11.EfficientDet⽬标检测框架算法分析
        12.EfficientDet源码分析与应⽤

    EfficientDet了解即可

        13.Detr⽬标检测算法解读
        14.Detr源码分析与应⽤实战
        15.DeformableDETR算法改进解读
        16.DeformableDETR源码解读与架构分析

    Detr建议深刷, 抢了yolo部分市场

        17.Fcos算法如何提升检测速度
        18.可变形卷积效果分析与⾏⼈检测实例

    上面俩了解

10. 图像分割

如果你要用分割, 你就可以刷一遍

11. MMLAB -> 重要

方便做实验, 很快, 这个工具好好学一下 -> 搞论文的一定要知道怎么搞配置 -> 跟少儿编程类似 -> 你组合模块组合好了就欧了

十年前没有工具, 亲力亲为 -> 现在复杂的东西可以很简单的实现

怎么用你的模板 -> 怎么快速搞你的实验 -> 这东西就是不墨迹, 用起来很爽

12. 行为识别
与图像分割一样, 优先级别看你自己需求

13. transformer -> 要非常熟悉 -> 花时间刷 -> 重点
不建议少于两周 -> 会debug -> 这就是你学python的过程 -> 边练变查, 边查边忘, 继续查 -> 刷的越多, 积累的越多, 理解能力越强

越多越好

14. 图神经网络
用了刷 -> 不用了不刷 -> 建议理解

不会得能整两句 -> 这是不亏的 -> 花三四个小时理解一遍就行

15. 3D点云
也是, 不用不刷 -> 整一遍得, 能整两句

16. 目标追踪与姿态估计
也一样

17. 无人驾驶


// 三、论文与就业指导

